// get the canvas element
var canvas = document.getElementById("canvas");
// get the canvas context
var ctx = canvas.getContext("2d");

// resize canvas to fill the browser window
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

// obstacles speed
var speed = 3;

// obstacles acceleration
var acceleration = 0.001;

// multiple dfferent insults generated by copilot
var insults = [
    "You are a loser!",
    "you suck"
];

// this class represents the obstacle (red rectangle). It has size and position.
class Obstacle {
    constructor(x, y, width, height) {
        // random obstacles can insult the player, in which case we want to display the insult text over the obstacle
        this.insult = null;
        // select random insult
        if (Math.random() < 0.1 || true) {
            this.insult = insults[Math.floor(Math.random() * insults.length)];
        }
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }

    // draw the obstacle
    draw() {
        ctx.fillStyle = "red";
        ctx.fillRect(this.x, this.y, this.width, this.height);

        // if the obstacle has an insult, draw it
        if (this.insult) {
            ctx.font = "20px Arial";
            ctx.fillStyle = "black";
            ctx.fillText(this.insult, this.x, this.y);
        }
    }

    // update the position of the obstacle
    update() {
        this.x -= speed;
        // if the position of the obstacle is off the screen, move it to the right
        if (this.x < -this.width) {
            this.x = canvas.width;
        }
    }
}

// player can catch green rectangles that will decrease the speed
class Bonus {
    constructor(x, y) {
        this.x = x;
        this.y = y;
        this.width = 25;
        this.height = 25;
    }
    
    // draw the bonus

    
    draw() {
        ctx.fillStyle = "green";
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }

    update() {
        this.x -= speed;
        // if the position of the obstacle is off the screen, move it to the right
        if (this.x < -this.width) {
            this.x = canvas.width;
        }
    }
}

// player is just a rectangle that follows mouse cursor and has a blue color
class Player {
    constructor() {
        this.x = 0;
        this.y = 0;
        this.width = 25;
        this.height = 25;
    }

    // draw the player
    draw() {a
        ctx.fillStyle = "blue";
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }


}

// this is a class of a bullet object. Red obstacles can shoot the bullets at the player.
class Bullet {
    constructor(x, y) {
        this.x = x;
        this.y = y;
        this.width = 10;
        this.height = 10;
    }

    // draw the bullet 
    draw() {
        ctx.fillStyle = "pink";
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }

    // update the position of the bullet
    update() {
        this.x -= speed + 5;
        // if the position of the bullet is off the screen, move it to the right
        if (this.x < -this.width) {
            this.x = canvas.width;

        }
    }
}

// spawn at random height inside the canvas
var obstacles = [];
var bonuses = [];
var bullets = [];

// function for obstacle spawning
function spawnObstaclesAndBonuses() {
    // clear the obstacles array
    obstacles = [];
    bonuses = [];
    bullets = [];

    for (var i = 0; i < 5000; i++) {
        var x = canvas.width + i * 200;
        var y = Math.random() * (canvas.height - 50);
        // randomize the width and height
        var width = Math.random() * 50 + 50;
        var height = Math.random() * 50 + 50;
        var obstacle = new Obstacle(x, y, width, height);
        obstacles.push(obstacle);
    }

    for (var i = 0; i < 500; i++) {
        var x = canvas.width + i * 2000;
        var y = Math.random() * (canvas.height - 50);
        var bonus = new Bonus(x, y);
        bonuses.push(bonus);
    }
}

// create the player
var player = new Player();

// update the position of the player on mouse move
// the cursor should be in the center of the player
canvas.addEventListener("mousemove", function (e) {
    player.x = e.clientX - player.width / 2;
    player.y = e.clientY - player.height / 2;
}); 

// game over quotes can be a bit longer and tell the player something motivating or demotivating
var gameOverQuotes = [
    "You are a loser!",

];

// this is the core loop of the game. It is called 60 times per second.
function gameLoop() {
    // clear the canvas
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // draw the obstacles
    for (var i = 0; i < obstacles.length; i++) {
        obstacles[i].draw();
        obstacles[i].update();
    }

    // draw the bonuses
    for (var i = 0; i < bonuses.length; i++) {
        bonuses[i].draw();
        bonuses[i].update();
    }

    // draw the player
    player.draw();

    // increase the speed
    speed += acceleration;

    // check for collision
    for (var i = 0; i < obstacles.length; i++) {
        var obstacle = obstacles[i];
        if (player.x < obstacle.x + obstacle.width &&
            player.x + player.width > obstacle.x &&
            player.y < obstacle.y + obstacle.height &&
            player.y + player.height > obstacle.y) {
            // collision detected!
            // show game over message with alert
            alert(gameOverQuotes[Math.floor(Math.random() * gameOverQuotes.length)]);
            // reset the speed
            speed = 3;
            // spawn new obstacles
            spawnObstaclesAndBonuses();
        }
    }

    // check for bonus collision
    for (var i = 0; i < bonuses.length; i++) {
        var bonus = bonuses[i];
        if (player.x < bonus.x + bonus.width &&
            player.x + player.width > bonus.x &&
            player.y < bonus.y + bonus.height &&
            player.y + player.height > bonus.y) {
            // collision detected!
            // remove the bonus from the array
            bonuses.splice(i, 1);
            // decrease the speed
            speed -= 0.5;
        }
    }

    // draw the bullets
    for (var i = 0; i < bullets.length; i++) {
        bullets[i].draw();
        bullets[i].update();
    }

    // check for bullet collision
    for (var i = 0; i < bullets.length; i++) {
        var bullet = bullets[i];
        if (player.x < bullet.x + bullet.width &&
            player.x + player.width > bullet.x &&
            player.y < bullet.y + bullet.height &&
            player.y + player.height > bullet.y) {
            // collision detected!
            // show game over message with alert
            alert(gameOverQuotes[Math.floor(Math.random() * gameOverQuotes.length)]);
            // reset the speed
            speed = 3;
            // spawn new obstacles
            spawnObstaclesAndBonuses();
        }

    }

    // spawn one bullet every 3 seconds
    // get time
    var time = new Date().getTime();
    // if the time is divisible by 3, spawn a bullet
    if (time % 3 == 0) {
        // get a random obstacle
        var obstacle = obstacles[Math.floor(Math.random() * obstacles.length)];
        // create a bullet
        var bullet = new Bullet(obstacle.x, obstacle.y);
        // add the bullet to the array
        bullets.push(bullet);
    }

    // draw the score
    // should be blue
    ctx.fillStyle = "blue";
    // font size should be 30px
    ctx.font = "30px Arial";
    // draw the text
    ctx.fillText("Score: " + Math.floor(speed), 10, 30);

}

// spawn the obstacles
spawnObstaclesAndBonuses();
// start the game loop
setInterval(gameLoop, 1000 / 60);
